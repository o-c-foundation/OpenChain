AWSTemplateFormatVersion: '2010-09-09'
Description: 'OpenChain deployment infrastructure'

Parameters:
  EnvironmentName:
    Type: String
    Default: Production
    Description: Environment name

  InstanceType:
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    Description: EC2 instance type

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicSubnet1

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-IGW

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicRT

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for OpenChain application
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 27017
          ToPort: 27017
          CidrIp: 10.0.0.0/16

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: ami-0261755bbcb8c4a84  # Ubuntu 20.04 LTS
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update
          apt-get install -y nodejs npm mongodb nginx
          npm install -g pm2
          
          # Configure MongoDB
          systemctl start mongodb
          systemctl enable mongodb
          
          # Configure Nginx
          cat > /etc/nginx/sites-available/openchain << 'EOL'
          server {
              listen 80;
              server_name _;
              
              location / {
                  proxy_pass http://localhost:3000;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
              }
          }
          EOL
          
          ln -s /etc/nginx/sites-available/openchain /etc/nginx/sites-enabled/
          rm /etc/nginx/sites-enabled/default
          systemctl restart nginx
          
          # Deploy application
          cd /home/ubuntu
          aws s3 cp s3://${OpenChainBucket}/deploy.zip .
          unzip deploy.zip
          npm install
          npm run build
          pm2 start dist/index.js --name openchain
          pm2 startup
          pm2 save
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-OpenChain

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      InstanceId: !Ref EC2Instance

  OpenChainBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub openchain-deployments-${AWS::AccountId}
      VersioningConfiguration:
        Status: Enabled

Outputs:
  URL:
    Description: Application URL
    Value: !Sub http://${ElasticIP}
  
  MongoDBEndpoint:
    Description: MongoDB endpoint
    Value: !Sub mongodb://localhost:27017/openchain 